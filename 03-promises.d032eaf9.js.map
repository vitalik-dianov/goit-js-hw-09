{"mappings":"AAgBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,SAE3CA,MAzBSO,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAA0BC,GACxBA,EAAMC,iBACN,IAAIX,EAAQY,OAAOF,EAAMG,OAAOb,MAAMc,OACtC,MAAMC,EAAOH,OAAOF,EAAMG,OAAOE,KAAKD,OAChCE,EAASJ,OAAOF,EAAMG,OAAOG,OAAOF,OAC1C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGjB,GACdkB,MAAKJ,GAASK,QAAQC,IAAIN,KAC1BO,OAAMC,GAASH,QAAQC,IAAIE,KAC9BtB,GAASe","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\nformRef.addEventListener('submit', generatorPromise);\n\nfunction generatorPromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(value => console.log(value))\n      .catch(error => console.log(error));\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","Number","target","value","step","amount","i","then","console","log","catch","error"],"version":3,"file":"03-promises.d032eaf9.js.map"}