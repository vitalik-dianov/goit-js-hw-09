{"mappings":"YAeA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,SAEnDA,MAxBSQ,SAASC,cAAc,SA4B/BC,iBAAiB,UA1BzB,SAA0BC,GACxBA,EAAMC,iBAIN,IAHA,IAAIZ,EAAQa,OAAOF,EAAMG,OAAOd,MAAMe,OAChCC,EAAOH,OAAOF,EAAMG,OAAOE,KAAKD,OAChCE,EAASJ,OAAOF,EAAMG,OAAOG,OAAOF,OACjCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCpB,EAAcoB,EAAGlB,GACdmB,MAAK,SAAAJ,G,OAASK,QAAQC,IAAIN,MAC1BO,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,MAC9BvB,GAASgB,K","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nfunction generatorPromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(value => console.log(value))\n      .catch(error => console.log(error));\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', generatorPromise);"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","document","querySelector","addEventListener","event","preventDefault","Number","target","value","step","amount","i","then","console","log","catch","error"],"version":3,"file":"03-promises.8a8ec42e.js.map"}